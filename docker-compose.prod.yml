version: '3.8'

services:
  # Web Application Service
  sci-bono-lms-app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: sci-bono-lms-app
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Application files
      - ./:/var/www/html:ro
      # Writable directories
      - ./storage:/var/www/html/storage
      - ./public/assets/uploads:/var/www/html/public/assets/uploads
      # SSL certificates (mount your actual certificates)
      - ./docker/ssl:/etc/ssl/certs:ro
      # Logs
      - ./logs:/var/www/html/logs
      # Configuration
      - ./docker/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf:ro
      - ./docker/apache/default-ssl.conf:/etc/apache2/sites-available/default-ssl.conf:ro
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./docker/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini:ro
    environment:
      - APP_ENV=production
      - PHP_OPCACHE_VALIDATE_TIMESTAMPS=0
      - PHP_OPCACHE_REVALIDATE_FREQ=0
      - APACHE_RUN_USER=www-data
      - APACHE_RUN_GROUP=www-data
    depends_on:
      - database
      - redis
    networks:
      - sci-bono-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Service
  database:
    image: mysql:8.0
    container_name: sci-bono-lms-db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-accounts}
      MYSQL_USER: ${DB_USERNAME:-scibono_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      # Persistent database storage
      - db_data:/var/lib/mysql
      # Database initialization
      - ./Database:/docker-entrypoint-initdb.d:ro
      # MySQL configuration
      - ./docker/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
    networks:
      - sci-bono-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: sci-bono-lms-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - sci-bono-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Reverse Proxy & Load Balancer
  nginx-proxy:
    image: nginx:alpine
    container_name: sci-bono-lms-proxy
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/ssl/certs:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - sci-bono-lms-app
    networks:
      - sci-bono-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring Service
  monitoring:
    image: prom/prometheus:latest
    container_name: sci-bono-lms-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - sci-bono-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Log Aggregation
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: sci-bono-lms-logs
    restart: unless-stopped
    user: root
    volumes:
      - ./docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/var/log/app:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - sci-bono-network
    depends_on:
      - sci-bono-lms-app

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/sci-bono-data/mysql
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/sci-bono-data/redis
  prometheus_data:
    driver: local

networks:
  sci-bono-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16